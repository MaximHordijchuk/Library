<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    <http pattern="/login" security="none"/>

    <http pattern="/resources/**" security="none"/>

    <http auto-config="true" use-expressions="true">
        <intercept-url pattern="/**" access="hasRole('ROLE_USER')"/>
        <form-login login-processing-url="/static/j_spring_security_check"
                    login-page="/login"
                    authentication-failure-url="/login?login_error=t"/>
        <logout logout-url="/static/j_spring_security_logout"/>
        <remember-me key="storeKey"/>
    </http>

    <beans:import resource="appServlet/db-config.xml"/>

    <authentication-manager>
        <!--<authentication-provider>
            <user-service>
                <user name="max" password="1111" authorities="ROLE_USER, ROLE_ADMIN" />
            </user-service>
        </authentication-provider>-->
        <authentication-provider>
            <jdbc-user-service
                    data-source-ref="dataSource"
                    users-by-username-query=
                            "SELECT USER.name AS username, USER.password AS password, TRUE
                            FROM USER
                            WHERE USER.name = ?"
                    authorities-by-username-query=
                            "SELECT USER.name AS username, 'ROLE_USER'
                            FROM USER
                            WHERE USER.name = ?"/>
        </authentication-provider>
    </authentication-manager>


</beans:beans>